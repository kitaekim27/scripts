#!/bin/sh

set -o errexit -o nounset -o noglob -o pipefail

info() {
	echo "init:" "${@}"
}

error() {
	info "${@}" >&2
}

rescue_shell() {
	error "Something went wrong! Dropping to a rescue shell."
	exec sh
}

sread() {
	read_prompt="${1}"
	read_variable="${2}"

	printf "%s" "${read_prompt}"
	stty -echo
	read -r "${read_variable}"
	stty echo
	echo
}

trap rescue_shell EXIT

export PATH="${PATH}:/usr/local/bin"

# We use udev here. Make sure not to use any uevnet helper.
[ -w /sys/kernel/uevent_helper ] && echo > /sys/kernel/uevent_helper

mount -t proc proc /proc
mount -t devtmpfs udev /dev
mount -t sysfs sysfs /sys
mkdir -p /dev/pts
mount -t devpts devpts /dev/pts
mount -t tmpfs tmpfs /tmp

info "The initramfs init script successfully loaded!"
info "Start to initialize the system..."

info "Start the udev daemon..."
/lib/systemd/systemd-udevd --daemon --resolve-names="never"
udevadm trigger --type="subsystems" --action="add"
udevadm trigger --type="devices" --action="add"
udevadm settle || :

cat <<"EOF"
 _     _____ _ _  ___               ___       _     _ _
| |__ |___ /| | |/ _ \   __      __/ _ \ _ __| | __| | |
|  _ \  |_ \| | | | | |  \ \ /\ / / | | |  __| |/ _` | |
| | | |___) | | | |_| |   \ V  V /| |_| | |  | | (_| |_|
|_| |_|____/|_|_|\___( )   \_/\_/  \___/|_|  |_|\__,_(_)
                     |/
EOF

info "Parse kernel parameters..."
read -r cmdline < /proc/cmdline
for cmd in ${cmdline}
do
	case "${cmd}" in
		root=*)
			cmd="${cmd#root=}"
			case "${cmd}" in
				PARTUUID=*)
					count=0
					while true
					do
						if root=$(findfs PARTUUID="${cmd#PARTUUID=}")
						then
							info "Detected the root partition."
							info "root=${root}"
							break
						fi

						count=$((count+1))
						if [ "${count}" = 50 ]
						then
							error "Failed to detect the root partition!"
							exit 1
						fi

						sleep 0.3
					done
					;;
			esac
			;;
	esac
done

info "Decrypt the root partition..."
while true
do
	sread "Enter a passphrase for the root partition: " passphrase
	if mkpassphrase "${passphrase}" | sed  "s/result = \(.*\)/\1/" \
		| xxd -revert -plain | cryptsetup luksOpen \
			--key-file="-" "/dev/${root}" root
	then
		break
	fi

	error "Failed to open the root partition!"
	error "The system you're on might be modified to steal your information!"
	while true
	do
		printf "Do you want to open the root partition using a recovery passphrase? [y/n]: "
		read -r answer
		case "${answer}" in
			y* | Y*)
				while true
				do
					sread "Enter a recovery passphrase for the root partition: " \
						recovery_passphrase
					if printf "${recovery_passphrase}" | cryptsetup luksOpen \
						--key-file="-" "/dev/${root}" root
					then
						break
					fi
					error "Failed to open the root partition! Try again."
				done
				break
				;;
			n* | N*)
				info "Execute a shell for debugging..."
				exit 1
				;;
			*)
				error "Invalid input! Try again."
				;;
		esac
	done
done

info "Mount the root partition!"
mkdir -p /mnt/root
mount /dev/mapper/root /mnt/root
mount -t btrfs -o noatime,rw,space_cache=v2,subvolid=5,subvol=/deploy/target \
	/dev/mapper/root /mnt/root/deploy/target

info "Stop the udev daemon..."
udevadm control --exit

info "Clean up..."
umount -R /dev
umount /proc
umount /sys

info "Execute the init process!"
exec switch_root /mnt/root/deploy/target /sbin/init
