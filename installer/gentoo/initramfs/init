#!/bin/sh

# shellcheck disable=SC3040
set -o errexit -o nounset -o noglob -o pipefail

info() {
    echo "init:" "$@"
}

error() {
    info "$@" >&2
}

rescue_shell() {
    error "Something went wrong! Dropping to a rescue shell."
    exec sh
}

sread() {
    read_prompt="${1?}"
    read_variable="${2?}"

    printf "%s" "$read_prompt"
    stty -echo
    read -r "${read_variable?}"
    stty echo
    echo
}

trap rescue_shell EXIT

mount -t devtmpfs none /dev
mount -t proc none /proc
mount -t sysfs none /sys

read -r cmdline < /proc/cmdline
for cmd in $cmdline
do
    case "$cmd" in
        root=*)
            cmd="${cmd#root=}"
            case "$cmd" in
                PARTUUID=*)
                    count=0
                    while true
                    do
                        # shellcheck disable=SC2015
                        root=$(findfs PARTUUID="${cmd#PARTUUID=}") && break || :
                        count=$((count+1))
                        [ "$count" = 10 ] && exit 1
                        sleep 0.3
                    done
                    ;;
            esac
            ;;
    esac
done

sread "Enter a passphrase for the root partition: " passphrase
luks_passphrase=$(mkpassphrase "${passphrase?}" | sed -n "s/result = \(.*\)/\1/p")

if ! echo "$luks_passphrase" | xxd -revert -plain \
    | cryptsetup luksOpen --key-file="-" "/dev/$root" root
then
    error "Failed to open the root partition!"
    error "The system you're on might be modified to steal your information!"
    printf "Do you want to open the root partition using a recovery passphrase? [y/n]: "
    read -r answer
    if [ "$answer" = "y" ] || [ "$answer" = "Y" ]
    then
        sread "Enter a recovery passphrase for the root partition: " recovery_passphrase
        echo "${recovery_passphrase?}" \
            | cryptsetup luksOpen --key-file="-" "/dev/$root" root
    else
        exit 1
    fi
fi

mount /dev/mapper/root /mnt/root

umount -R /dev
umount /proc
umount /sys

exec switch_root /mnt/root/deploy/current /sbin/init
