#!/bin/bash

set -o errexit -o nounset -o noglob -o pipefail

THIS_SCRIPT=$(basename "${0}")
readonly THIS_SCRIPT

info() {
	echo "${THIS_SCRIPT}:" "${@}"
}

error() {
	info "${@}" >&2
}

if [ "${EUID}" != 0 ]
then
	error "This script requires root privilege!"
	exit 1
fi

readonly SOURCE_DIR="/var/lib/initramfs"

BUILD_DIR=$(mktemp --directory --tmpdir "${THIS_SCRIPT}.XXXXXXXXXX")
readonly BUILD_DIR

LINUX_VERSION=$(lslinux | fzf --header="Select a target linux kernel version.")
readonly LINUX_VERSION

cleanup() {
	info "Unmount pseudo filesystems in the initramfs build directory."
	unmount-pseudofs "${BUILD_DIR}"
}

trap cleanup EXIT

info "Download a stage 3 tarball."
readonly ARCH="amd64"
readonly MIRROR="http://ftp.kaist.ac.kr/gentoo/releases"
wget --recursive --no-parent --no-directories --quiet \
	--directory-prefix="${BUILD_DIR}/download" \
	--accept="stage3-${ARCH}-musl-hardened-*" \
	"${MIRROR}/${ARCH}/autobuilds/current-stage3-${ARCH}-openrc/"

info "Extract the stage 3 tarball into the initramfs build directory."
find "${BUILD_DIR}/download" -iname "stage3-*.tar.xz" \
	-exec tar --directory="${BUILD_DIR}" \
		--use-compress-program="xz --threads=0" \
		--extract --preserve-permissions --file={} \
		--xattrs-include='*.*' --numeric-owner \;

info "Clean up the stage 3 tarball."
rm --recursive "${BUILD_DIR}/download"

info "Mount pseudo filesystems in the initramfs build directory."
mount-pseudofs "${BUILD_DIR}"

info "Copy files in the source directory into the build directory."
find "${SOURCE_DIR}" -mindepth 1 -maxdepth 1 -exec cp --archive {} "${BUILD_DIR}" \;

info "Copy my scripts into the initramfs build directory."
cp "$(locatebin mkpassphrase)" "${BUILD_DIR}$(locatebin mkpassphrase)"

info "Install kernel modules into the initramfs build directory."
mkdir --parents "${BUILD_DIR}/lib/modules/${LINUX_VERSION}"
find "/lib/modules/${LINUX_VERSION}" -mindepth 1 -maxdepth 1 \
	-exec cp --archive {} "${BUILD_DIR}/lib/modules/${LINUX_VERSION}" \;

# TODO: This increases initramfs size drastcally. Install only firmwares that
#	   really matters into the initramfs.
# info "Install kernel firmwares into the initramfs build directory."
# mkdir --parents "${BUILD_DIR}/lib/firmware"
# find /lib/firmware -mindepth 1 -maxdepth 1 \
#	 -exec cp --archive {} "${BUILD_DIR}/lib/firmware" \;

info "Configure DNS of the installation."
cp --dereference /etc/resolv.conf "${BUILD_DIR}/etc/resolv.conf"

info "Configure Portage of the initramfs."
echo "MAKEOPTS=\"-j$(nproc)\"" >> "${BUILD_DIR}/etc/portage/make.conf"
mkdir --parents "${BUILD_DIR}/etc/portage/repos.conf"
cp "${BUILD_DIR}/usr/share/portage/config/repos.conf" "${BUILD_DIR}/etc/portage/repos.conf/gentoo.conf"
mkdir --parents "${BUILD_DIR}/var/db/repos"
cp --archive /var/db/repos/gentoo "${BUILD_DIR}/var/db/repos"

info "Configure timezone of the initramfs."
cp --archive /etc/timezone "${BUILD_DIR}/etc/timezone"
chroot "${BUILD_DIR}" emerge --config sys-libs/timezone-data

# TODO: Automate this.
info "Configure locales of the initramfs."
cp --archive /etc/locale.gen "${BUILD_DIR}/etc/locale.gen"
chroot "${BUILD_DIR}" locale-gen
chroot "${BUILD_DIR}" eselect locale list
read -rp "Select a locale: " locale
chroot "${BUILD_DIR}" eselect locale set "${locale}"

info "Configure hostname of the initramfs."
cp --archive /etc/conf.d/hostname "${BUILD_DIR}/etc/conf.d/hostname"
cp --archive /etc/hosts "${BUILD_DIR}/etc/hosts"

info "Reload the environment in the initramfs."
chroot "${BUILD_DIR}" env-update

info "Install tpm2-tools into the initramfs."
chroot "${BUILD_DIR}" emerge --autounmask --autounmask-write --autounmask-only app-crypt/tpm2-tools
chroot "${BUILD_DIR}" dispatch-conf
chroot "${BUILD_DIR}" emerge app-crypt/tpm2-tools

info "Install cryptsetup into the initramfs."
chroot "${BUILD_DIR}" emerge sys-fs/cryptsetup

info "Reduce size of the initramfs."
find "${BUILD_DIR}/var/db/repos/gentoo" -mindepth 1 -maxdepth 1 -exec rm --recursive {} +
find "${BUILD_DIR}/var/tmp/portage" -mindepth 1 -maxdepth 1 -exec rm --recursive {} +
find "${BUILD_DIR}/var/cache/distfiles" -mindepth 1 -maxdepth 1 -exec rm --recursive {} +
find "${BUILD_DIR}/var/cache/binpkgs" -mindepth 1 -maxdepth 1 -exec rm --recursive {} +

trap - EXIT
cleanup

info "Build and install the initramfs into /boot."
( cd "${BUILD_DIR}" && find . -mindepth 1 -print0 \
	| cpio --null --create --format="newc" \
	| gzip -9  > "/boot/initrd.img-${LINUX_VERSION}" )
