#!/bin/bash

set -o errexit -o nounset -o noglob -o pipefail

THIS_SCRIPT=$(basename "$0")
readonly THIS_SCRIPT

info() {
    echo "$THIS_SCRIPT:" "$@"
}

error() {
    info "$@" >&2
}

if [ "$EUID" != 0 ]
then
    error "This script requires root privilege!"
    exit 1
fi

readonly SOURCE_DIR="/usr/src/initramfs"

BUILD_DIR=$(mktemp --directory --tmpdir "$THIS_SCRIPT.XXXXXXXXXX")
readonly BUILD_DIR

LINUX_VERSION=$(lslinux | fzf --header="Select a target linux kernel version.")
readonly LINUX_VERSION

# XXX: Note that it's better to disable some USE flags enabled system-wide here
#      (e.g, bluetooth).
GENERAL_USE="-elogind -systemd -X -bluetooth -networkmanager -dbus -mime -man"
KERNEL_DIR="/usr/src/linux-$LINUX_VERSION" USE="$GENERAL_USE make-symlinks" \
    emerge --root="$BUILD_DIR" sys-apps/busybox
# Here, we need to install gcc for libgcc_s.so which is a hidden dependency
# for pthread for cryptsetup...
KERNEL_DIR="/usr/src/linux-$LINUX_VERSION" USE="$GENERAL_USE -cxx" \
    emerge --root="$BUILD_DIR" sys-devel/gcc
KERNEL_DIR="/usr/src/linux-$LINUX_VERSION" USE="$GENERAL_USE" \
    emerge --root="$BUILD_DIR" app-crypt/tpm2-tools sys-fs/cryptsetup

info "Create pseudo filesystem mounts points in the iniramfs build directory."
for directory in /proc /sys /run /dev
do
    mkdir --parents "$BUILD_DIR$directory"
done

info "Copy files in the source directory into the build directory."
find "$SOURCE_DIR" -mindepth 1 -maxdepth 1 -exec cp --archive {} "$BUILD_DIR" \;

info "Copy my scripts into the initramfs build directory."
mkdir --parents "$BUILD_DIR/usr/local/bin"
cp "$(locatebin mkpassphrase)" "$BUILD_DIR/usr/local/bin"

info "Install kernel modules into the initramfs build directory."
mkdir --parents "$BUILD_DIR/lib/modules/$LINUX_VERSION"
find "/lib/modules/$LINUX_VERSION" -mindepth 1 -maxdepth 1 \
    -exec cp --archive {} "$BUILD_DIR/lib/modules/$LINUX_VERSION" \;

# info "Install kernel firmwares into the initramfs build directory."
# mkdir --parents "$BUILD_DIR/lib/firmware"
# find /lib/firmware -mindepth 1 -maxdepth 1 \
#     -exec cp --archive {} "$BUILD_DIR/lib/firmware" \;

info "Build and install the initramfs into /boot."
( cd "$BUILD_DIR" && find . -mindepth 1 -print0 \
    | cpio --null --create --format="newc" \
    | gzip -9  > "/boot/initrd.img-$LINUX_VERSION" )

info "Successfully built the initramfs!"
info "Clean up the initramfs build directory."
rm --recursive "$BUILD_DIR"
